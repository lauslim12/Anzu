(window.webpackJsonp=window.webpackJsonp||[]).push([[11],{368:function(t,e,s){"use strict";s.r(e);var a=s(42),n=Object(a.a)({},(function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"automation-setup"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#automation-setup"}},[t._v("#")]),t._v(" Automation Setup")]),t._v(" "),s("p",[t._v("Cron is used to schedule timers of when Anzu would remind its users about tasks to be done and times of when Anzu would delete expired tasks. Cronjobs are run by default at the following times (GMT +7 time):")]),t._v(" "),s("ul",[s("li",[t._v("01:00 (to clean up expired tasks)")]),t._v(" "),s("li",[t._v("17:00 (to remind a user / group / room about a task)")])]),t._v(" "),s("p",[t._v("You can change the timezone and the number of times you want to be reminded by editing the configuration file at "),s("code",[t._v("constants/constants.ts")]),t._v(".")]),t._v(" "),s("p",[t._v("If you have a paid LINE subscription, you can add more reminders. However, as I am stuck with the free version, I'll keep them at two reminders per day.")]),t._v(" "),s("p",[t._v("A note to keep in mind that if there are no expired tasks, Anzu will not notify anything at 01:00. This is done so that the bandwith is not wasted. Another thing to note is that by default, this application uses the long reminder function for the schedulers (refer to "),s("code",[t._v("functions/scheduleFunctions.ts")]),t._v(").")]),t._v(" "),s("h2",{attrs:{id:"automation-considerations"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#automation-considerations"}},[t._v("#")]),t._v(" Automation Considerations")]),t._v(" "),s("p",[t._v("We have to take into consideration that Heroku free dynos sleep every 30 minutes when our application is not running. When our application is sleeping, the cronjobs made with "),s("code",[t._v("node-cron")]),t._v(" "),s("strong",[t._v("will not run")]),t._v(".")]),t._v(" "),s("p",[t._v("In order to circumvent the above case, we are going to use cronjobs to ping the Heroku server, so that it will wake up before the cronjobs start.")]),t._v(" "),s("ul",[s("li",[t._v("You can change the time and the timezone of the cronjob by changing the code according to the cron syntax. Here is an "),s("a",{attrs:{href:"https://crontab.guru/",target:"_blank",rel:"noopener noreferrer"}},[t._v("excellent site"),s("OutboundLink")],1),t._v(" that describes the cron syntax.")])]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("crontab")]),t._v(" -l\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("crontab")]),t._v(" -e\n")])])]),s("ul",[s("li",[t._v("The reason the crontab is setup like this is so that it gives Heroku time to prepare before running the cronjobs made with "),s("code",[t._v("node-cron")]),t._v(". We just need to ping the webserver (a small "),s("code",[t._v("GET")]),t._v(" request) so that it wakes up.")])]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token number"}},[t._v("55")]),t._v(" 00 * * * "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("cd")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"'),s("span",{pre:!0,attrs:{class:"token environment constant"}},[t._v("$HOME")]),t._v('/Anzu/auto"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("bash")]),t._v(" ping-webserver.sh "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("link_to_webserver"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("55")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("16")]),t._v(" * * * "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("cd")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"'),s("span",{pre:!0,attrs:{class:"token environment constant"}},[t._v("$HOME")]),t._v('/Anzu/auto"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("bash")]),t._v(" ping-webserver.sh "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("link_to_webserver"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n")])])]),s("ul",[s("li",[t._v("In order to check if our crontab had run successfully, we could use the following command.")])]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("grep")]),t._v(" CRON /var/log/syslog\n")])])]),s("h2",{attrs:{id:"additional-configurations"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#additional-configurations"}},[t._v("#")]),t._v(" Additional Configurations")]),t._v(" "),s("ul",[s("li",[t._v("This part is optional. You might want to setup SSH into your Git, as I also have a script named "),s("code",[t._v("keep-track.sh")]),t._v(" to always pull from the latest remote repository to keep my local repository updated. Don't forget to set the "),s("code",[t._v("origin")]),t._v(" URL.")])]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("cd")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token environment constant"}},[t._v("$HOME")]),t._v("\nssh-keygen -t rsa -b "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4096")]),t._v(" -C "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("your_github_email"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("cd")]),t._v(" .ssh\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("ls")]),t._v(" -a             "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Check out your RSA '.pub' name.")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("cat")]),t._v(" id_rsa.pub    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# The default identifier is 'id_rsa'. You probably have a different identifier.")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Then, configure your access keys with your GitHub configuration. After that, test your connection.")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("ssh")]),t._v(" -T git@github.com\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" remote set-url origin git+ssh://git@github.com/username/reponame.git\n")])])]),s("ul",[s("li",[t._v("You can run "),s("code",[t._v("keep-track.sh")]),t._v(" by using the following cronjobs. In this example, I run the script everyday at 09:00 AM.")])]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("00 09 * * * "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("cd")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"'),s("span",{pre:!0,attrs:{class:"token environment constant"}},[t._v("$HOME")]),t._v('/Anzu/auto"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("bash")]),t._v(" keep-track.sh\n")])])]),s("h2",{attrs:{id:"example-of-reminders"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#example-of-reminders"}},[t._v("#")]),t._v(" Example Of Reminders")]),t._v(" "),s("p",[t._v("Below is the example of Anzu reminding someone.")]),t._v(" "),s("div",{staticClass:"language-text extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("Hello everyone! How are you?\n\nThis is an automated message from Anzu to remind you all of your schedules. Here is it:\n\n... (your tasks)\n\nGood luck and stay in high spirits!\n")])])]),s("p",[t._v("Belos is the example of Anzu cleaning up tasks.")]),t._v(" "),s("div",{staticClass:"language-text extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("Hello everyone! Did you sleep well?\n\nAnzu just wants to let you know that she has cleaned up several expired tasks. Here is it:\n\n... (your expired tasks)\n\nThank you and good luck!\n")])])])])}),[],!1,null,null,null);e.default=n.exports}}]);